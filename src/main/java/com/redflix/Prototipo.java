/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.redflix;

import java.awt.Color;
import java.util.HashMap;
import java.util.Map;//****************
import java.util.regex.Pattern;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

import org.springframework.boot.autoconfigure.SpringBootApplication;

import javax.swing.JTextArea;//**************************

/**
 *
 * @author faibe
 */
public class Prototipo extends javax.swing.JFrame {
	
	public Backend backend;
   
    public Prototipo() {
    	//backend = new Backend();
        initComponents();
        this.setResizable(false);
        panelDirector.setVisible(false);
        panelPelicula.setVisible(false);
        panelSerie.setVisible(false);
        TituloUsuarioExistente.setVisible(false);
        panelCliente.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelPrincipal = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        panelMenu = new javax.swing.JPanel();
        botonCliente = new javax.swing.JButton();
        botonDirector = new javax.swing.JButton();
        botonPelicula = new javax.swing.JButton();
        botonSerie = new javax.swing.JButton();
        panelPadre = new javax.swing.JPanel();
        panelCliente = new javax.swing.JPanel();
        tituloCliente = new javax.swing.JLabel();
        etiClienteNombre = new javax.swing.JLabel();
        etiClienteApell = new javax.swing.JLabel();
        etiClienteEmail = new javax.swing.JLabel();
        etiClienteCel = new javax.swing.JLabel();
        etiClienteAlias = new javax.swing.JLabel();
        etiClienteContra = new javax.swing.JLabel();
        etiClienteFecha = new javax.swing.JLabel();
        textClienAlias = new javax.swing.JTextField();
        textClienEmail = new javax.swing.JTextField();
        textClienApell = new javax.swing.JTextField();
        textClienContra = new javax.swing.JTextField();
        textClienNombre = new javax.swing.JTextField();
        textClienCel = new javax.swing.JTextField();
        textClienFecha = new javax.swing.JTextField();
        TituloUsuarioExistente = new javax.swing.JLabel();
        panelDirector = new javax.swing.JPanel();
        tituloDirector = new javax.swing.JLabel();
        dir_nombre = new javax.swing.JLabel();
        dir_apellido = new javax.swing.JLabel();
        dir_nacionalidad = new javax.swing.JLabel();
        textDirNombre = new javax.swing.JTextField();
        textDirApel = new javax.swing.JTextField();
        textDirNacio = new javax.swing.JTextField();
        panelPelicula = new javax.swing.JPanel();
        pel_titulo = new javax.swing.JLabel();
        tituloPelicula = new javax.swing.JLabel();
        pel_director = new javax.swing.JLabel();
        pel_resumen = new javax.swing.JLabel();
        pel_año = new javax.swing.JLabel();
        textPelTitulo = new javax.swing.JTextField();
        textPelAgno = new javax.swing.JTextField();
        comboBoxPelDir = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        textPelResumen = new javax.swing.JTextArea();
        panelSerie = new javax.swing.JPanel();
        tituloSerie = new javax.swing.JLabel();
        ser_titulo = new javax.swing.JLabel();
        ser_episodios = new javax.swing.JLabel();
        ser_temporadas = new javax.swing.JLabel();
        textSerTitulo = new javax.swing.JTextField();
        textSerEpisodios = new javax.swing.JTextField();
        textSerTemporadas = new javax.swing.JTextField();
        panelConfirmacion = new javax.swing.JPanel();
        botonGuardar = new javax.swing.JButton();
        botonBuscar = new javax.swing.JButton();
        botonEliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Monotype Corsiva", 0, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("RedFlix");

        botonCliente.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        botonCliente.setText("Cliente");
        botonCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonClienteActionPerformed(evt);
            }
        });

        botonDirector.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        botonDirector.setText("Director");
        botonDirector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonDirectorActionPerformed(evt);
            }
        });

        botonPelicula.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        botonPelicula.setText("Película");
        botonPelicula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonPeliculaActionPerformed(evt);
            }
        });

        botonSerie.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        botonSerie.setText("Serie");
        botonSerie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSerieActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelMenuLayout = new javax.swing.GroupLayout(panelMenu);
        panelMenu.setLayout(panelMenuLayout);
        panelMenuLayout.setHorizontalGroup(
            panelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMenuLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(botonCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botonDirector, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botonPelicula, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botonSerie, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );
        panelMenuLayout.setVerticalGroup(
            panelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonDirector, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonPelicula, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonSerie, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelPadre.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tituloCliente.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 36)); // NOI18N
        tituloCliente.setText("Cliente");

        etiClienteNombre.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        etiClienteNombre.setText("Nombres:");

        etiClienteApell.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        etiClienteApell.setText("Apellidos:");

        etiClienteEmail.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        etiClienteEmail.setText("E-mail:");

        etiClienteCel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        etiClienteCel.setText("Celular:");

        etiClienteAlias.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        etiClienteAlias.setText("Alias:");

        etiClienteContra.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        etiClienteContra.setText("Contraseña:");

        etiClienteFecha.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        etiClienteFecha.setText("Fecha Nacimiento:");

        textClienAlias.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        textClienAlias.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textClienAliasFocusLost(evt);
            }
        });
        textClienAlias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textClienAliasActionPerformed(evt);
            }
        });

        textClienEmail.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        textClienEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textClienEmailFocusLost(evt);
            }
        });
        textClienEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textClienEmailActionPerformed(evt);
            }
        });

        textClienApell.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        textClienApell.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textClienApellFocusLost(evt);
            }
        });
        textClienApell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textClienApellActionPerformed(evt);
            }
        });

        textClienContra.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        textClienContra.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textClienContraFocusLost(evt);
            }
        });
        textClienContra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textClienContraActionPerformed(evt);
            }
        });

        textClienNombre.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        textClienNombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textClienNombreFocusLost(evt);
            }
        });
        textClienNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textClienNombreActionPerformed(evt);
            }
        });

        textClienCel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        textClienCel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textClienCelFocusLost(evt);
            }
        });
        textClienCel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textClienCelActionPerformed(evt);
            }
        });

        textClienFecha.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        textClienFecha.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textClienFechaFocusLost(evt);
            }
        });
        textClienFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textClienFechaActionPerformed(evt);
            }
        });

        TituloUsuarioExistente.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        TituloUsuarioExistente.setForeground(new java.awt.Color(255, 153, 51));
        TituloUsuarioExistente.setText("Usuario ya existe, si desea crear un nuevo usuario, cambielo; y si desea actualizarlo, clic primero en buscar");

        javax.swing.GroupLayout panelClienteLayout = new javax.swing.GroupLayout(panelCliente);
        panelCliente.setLayout(panelClienteLayout);
        panelClienteLayout.setHorizontalGroup(
            panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelClienteLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(etiClienteNombre)
                    .addComponent(etiClienteAlias)
                    .addComponent(etiClienteCel))
                .addGap(18, 18, 18)
                .addGroup(panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelClienteLayout.createSequentialGroup()
                        .addGroup(panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textClienNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textClienCel, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textClienAlias, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelClienteLayout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addGroup(panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(etiClienteContra)
                                    .addComponent(etiClienteFecha))
                                .addGap(18, 18, 18)
                                .addGroup(panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textClienContra, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textClienFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelClienteLayout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addGroup(panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(etiClienteEmail)
                                    .addComponent(tituloCliente)
                                    .addComponent(etiClienteApell))
                                .addGap(25, 25, 25)
                                .addGroup(panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(textClienApell, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)
                                    .addComponent(textClienEmail)))))
                    .addComponent(TituloUsuarioExistente, javax.swing.GroupLayout.PREFERRED_SIZE, 605, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        panelClienteLayout.setVerticalGroup(
            panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelClienteLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(tituloCliente)
                .addGap(52, 52, 52)
                .addComponent(TituloUsuarioExistente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiClienteAlias)
                    .addComponent(etiClienteEmail)
                    .addComponent(textClienAlias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textClienEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiClienteNombre)
                    .addComponent(textClienNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(etiClienteApell)
                    .addComponent(textClienApell, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiClienteCel)
                    .addComponent(textClienCel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(etiClienteContra)
                    .addComponent(textClienContra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiClienteFecha)
                    .addComponent(textClienFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        tituloDirector.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 36)); // NOI18N
        tituloDirector.setText("Director");

        dir_nombre.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        dir_nombre.setText("Nombres:");

        dir_apellido.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        dir_apellido.setText("Apellidos:");

        dir_nacionalidad.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        dir_nacionalidad.setText("Nacionalidad:");

        textDirNombre.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        textDirNombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textDirNombreFocusLost(evt);
            }
        });
        textDirNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textDirNombreActionPerformed(evt);
            }
        });

        textDirApel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        textDirApel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textDirApelFocusLost(evt);
            }
        });
        textDirApel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textDirApelActionPerformed(evt);
            }
        });

        textDirNacio.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        textDirNacio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textDirNacioFocusLost(evt);
            }
        });
        textDirNacio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textDirNacioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelDirectorLayout = new javax.swing.GroupLayout(panelDirector);
        panelDirector.setLayout(panelDirectorLayout);
        panelDirectorLayout.setHorizontalGroup(
            panelDirectorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDirectorLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(panelDirectorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dir_nombre)
                    .addComponent(dir_nacionalidad)
                    .addComponent(dir_apellido))
                .addGap(30, 30, 30)
                .addGroup(panelDirectorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textDirNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textDirApel, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textDirNacio, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDirectorLayout.createSequentialGroup()
                .addContainerGap(393, Short.MAX_VALUE)
                .addComponent(tituloDirector)
                .addGap(345, 345, 345))
        );
        panelDirectorLayout.setVerticalGroup(
            panelDirectorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDirectorLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(tituloDirector)
                .addGap(34, 34, 34)
                .addGroup(panelDirectorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dir_nombre)
                    .addComponent(textDirNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(panelDirectorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textDirApel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dir_apellido))
                .addGap(31, 31, 31)
                .addGroup(panelDirectorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textDirNacio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dir_nacionalidad))
                .addContainerGap(136, Short.MAX_VALUE))
        );

        panelPelicula.setAlignmentX(0.0F);

        pel_titulo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        pel_titulo.setText("Título:");

        tituloPelicula.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 36)); // NOI18N
        tituloPelicula.setText("Película");
        tituloPelicula.setToolTipText("");

        pel_director.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        pel_director.setText("Director:");

        pel_resumen.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        pel_resumen.setText("Resumen:");

        pel_año.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        pel_año.setText("Año:");

        textPelTitulo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textPelTituloFocusLost(evt);
            }
        });
        textPelTitulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textPelTituloActionPerformed(evt);
            }
        });

        textPelAgno.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textPelAgnoFocusLost(evt);
            }
        });
        textPelAgno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textPelAgnoActionPerformed(evt);
            }
        });

        comboBoxPelDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxPelDirActionPerformed(evt);
            }
        });

        textPelResumen.setColumns(20);
        textPelResumen.setRows(5);
        textPelResumen.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textPelResumenFocusLost(evt);
            }
        });
        jScrollPane1.setViewportView(textPelResumen);

        javax.swing.GroupLayout panelPeliculaLayout = new javax.swing.GroupLayout(panelPelicula);
        panelPelicula.setLayout(panelPeliculaLayout);
        panelPeliculaLayout.setHorizontalGroup(
            panelPeliculaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPeliculaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tituloPelicula)
                .addGap(329, 329, 329))
            .addGroup(panelPeliculaLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(panelPeliculaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pel_resumen)
                    .addComponent(pel_titulo)
                    .addComponent(pel_año)
                    .addComponent(pel_director))
                .addGap(30, 30, 30)
                .addGroup(panelPeliculaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelPeliculaLayout.createSequentialGroup()
                        .addComponent(textPelAgno)
                        .addGap(516, 516, 516))
                    .addComponent(comboBoxPelDir, 0, 574, Short.MAX_VALUE)
                    .addComponent(textPelTitulo)
                    .addComponent(jScrollPane1))
                .addContainerGap(148, Short.MAX_VALUE))
        );
        panelPeliculaLayout.setVerticalGroup(
            panelPeliculaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPeliculaLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(tituloPelicula)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelPeliculaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pel_titulo, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addGroup(panelPeliculaLayout.createSequentialGroup()
                        .addComponent(textPelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)))
                .addGap(21, 21, 21)
                .addGroup(panelPeliculaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pel_resumen)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelPeliculaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textPelAgno, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pel_año))
                .addGap(32, 32, 32)
                .addGroup(panelPeliculaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxPelDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pel_director))
                .addGap(50, 50, 50))
        );

        panelSerie.setAlignmentX(0.0F);

        tituloSerie.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 36)); // NOI18N
        tituloSerie.setText("Serie");
        tituloSerie.setToolTipText("");

        ser_titulo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ser_titulo.setText("Título:");

        ser_episodios.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ser_episodios.setText("Episodios:");

        ser_temporadas.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ser_temporadas.setText("Temporadas:");

        textSerTitulo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textSerTituloFocusLost(evt);
            }
        });
        textSerTitulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textSerTituloActionPerformed(evt);
            }
        });

        textSerEpisodios.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textSerEpisodiosFocusLost(evt);
            }
        });
        textSerEpisodios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textSerEpisodiosActionPerformed(evt);
            }
        });

        textSerTemporadas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textSerTemporadasFocusLost(evt);
            }
        });
        textSerTemporadas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textSerTemporadasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelSerieLayout = new javax.swing.GroupLayout(panelSerie);
        panelSerie.setLayout(panelSerieLayout);
        panelSerieLayout.setHorizontalGroup(
            panelSerieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSerieLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tituloSerie)
                .addGap(376, 376, 376))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSerieLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelSerieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ser_titulo)
                    .addComponent(ser_episodios)
                    .addComponent(ser_temporadas))
                .addGap(25, 25, 25)
                .addGroup(panelSerieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelSerieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(textSerTemporadas, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(textSerEpisodios, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(textSerTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(233, Short.MAX_VALUE))
        );
        panelSerieLayout.setVerticalGroup(
            panelSerieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSerieLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(tituloSerie)
                .addGap(18, 18, 18)
                .addGroup(panelSerieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ser_titulo)
                    .addComponent(textSerTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(panelSerieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ser_episodios)
                    .addComponent(textSerEpisodios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(panelSerieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ser_temporadas)
                    .addComponent(textSerTemporadas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(164, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelPadreLayout = new javax.swing.GroupLayout(panelPadre);
        panelPadre.setLayout(panelPadreLayout);
        panelPadreLayout.setHorizontalGroup(
            panelPadreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 884, Short.MAX_VALUE)
            .addGroup(panelPadreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panelCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panelPadreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panelDirector, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panelPadreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panelPelicula, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panelPadreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panelSerie, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelPadreLayout.setVerticalGroup(
            panelPadreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 378, Short.MAX_VALUE)
            .addGroup(panelPadreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panelCliente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panelPadreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panelDirector, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panelPadreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panelPelicula, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panelPadreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panelSerie, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        botonGuardar.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        botonGuardar.setText("Guardar");
        botonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGuardarActionPerformed(evt);
            }
        });

        botonBuscar.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        botonBuscar.setText("Buscar");
        botonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarActionPerformed(evt);
            }
        });

        botonEliminar.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        botonEliminar.setText("Eliminar");
        botonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelConfirmacionLayout = new javax.swing.GroupLayout(panelConfirmacion);
        panelConfirmacion.setLayout(panelConfirmacionLayout);
        panelConfirmacionLayout.setHorizontalGroup(
            panelConfirmacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConfirmacionLayout.createSequentialGroup()
                .addContainerGap(81, Short.MAX_VALUE)
                .addComponent(botonGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(botonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(botonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(92, 92, 92))
        );
        panelConfirmacionLayout.setVerticalGroup(
            panelConfirmacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConfirmacionLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(panelConfirmacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelPrincipalLayout = new javax.swing.GroupLayout(panelPrincipal);
        panelPrincipal.setLayout(panelPrincipalLayout);
        panelPrincipalLayout.setHorizontalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPrincipalLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(401, 401, 401))
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(panelMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelPadre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelConfirmacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelPrincipalLayout.setVerticalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panelMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelPadre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelConfirmacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(73, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void botonClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonClienteActionPerformed
        panelDirector.setVisible(false);
        panelPelicula.setVisible(false);
        panelSerie.setVisible(false);
        panelCliente.setVisible(true);
    }//GEN-LAST:event_botonClienteActionPerformed

    private void botonDirectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonDirectorActionPerformed
        panelCliente.setVisible(false);
        panelPelicula.setVisible(false);
        panelSerie.setVisible(false);
        panelDirector.setVisible(true);
    }//GEN-LAST:event_botonDirectorActionPerformed

    private void botonPeliculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonPeliculaActionPerformed
        panelCliente.setVisible(false);
        panelPelicula.setVisible(true);
        panelSerie.setVisible(false);
        panelDirector.setVisible(false);
        inicializarComboDirectores();
    }//GEN-LAST:event_botonPeliculaActionPerformed

    private void botonSerieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSerieActionPerformed
        panelCliente.setVisible(false);
        panelPelicula.setVisible(false);
        panelSerie.setVisible(true);
        panelDirector.setVisible(false);
    }//GEN-LAST:event_botonSerieActionPerformed

    private void botonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGuardarActionPerformed

        HashMap<String,String> datos = new HashMap<String,String>();
        if(panelCliente.isVisible()){
            if(validarFormularioCliente()){
                datos.put(Constants.usuario_alias, textClienAlias.getText());
                datos.put(Constants.usuario_email, textClienEmail.getText());
                datos.put(Constants.usuario_nombre, textClienNombre.getText());
                datos.put(Constants.usuario_apellido, textClienApell.getText());
                datos.put(Constants.usuario_celular, textClienCel.getText());
                datos.put(Constants.usuario_contrasegna, textClienContra.getText());
                datos.put(Constants.usuario_fecha_nacimiento, textClienFecha.getText());
                if(Backend.actualizar("usuario", datos)){
                    borrarFormularioCliente();
                    JOptionPane.showMessageDialog(null, "Datos guardados correctamente1");                    
                }else{
                    JOptionPane.showMessageDialog(null, "No se pudieron guardar los datos1");    
                }
            }else{
                JOptionPane.showMessageDialog(null, "Error. Hay campos con valores no validos1");
            }
            
        }else if(panelDirector.isVisible()){
            if(validarFormularioDirector()){
                datos.put(Constants.director_nombre, textDirNombre.getText());
                datos.put(Constants.director_apellido, textDirApel.getText());
                datos.put(Constants.director_nacionalidad, textDirNacio.getText());
                //if(Backend.actualizar("usuario", datos)){
                if(Backend.actualizar("director", datos)){
                    borrarFormularioDirector();
                    JOptionPane.showMessageDialog(null, "Datos guardados correctamente");
                }else{
                    JOptionPane.showMessageDialog(null, "No se pudieron guardar los datos");    
                }
            }else{
                JOptionPane.showMessageDialog(null, "Error. Hay campos con valores no validos2");
            }
        
        }else if(panelPelicula.isVisible()){////*************************************
            if(validarFormularioSerie()){
                datos.put(Constants.pelicula_titulo, textPelTitulo.getText());
                datos.put(Constants.pelicula_resumen, textPelResumen.getText());
                datos.put(Constants.pelicula_agno, textPelAgno.getText());
                datos.put(Constants.pelicula_director, (String) comboBoxPelDir.getSelectedItem());
                //datos.put()director
                if(Backend.actualizar("pelicula", datos)){
                    borrarFormularioPelicula();
                    JOptionPane.showMessageDialog(null, "Datos guardados correctamente");
                }else{
                    JOptionPane.showMessageDialog(null, "No se pudieron guardar los datos");    
                }
            }else{
                JOptionPane.showMessageDialog(null, "Error. Hay campos con valores no validos2");
            }
            
        }else if(panelSerie.isVisible()){////*************************************
            if(validarFormularioSerie()){
                datos.put(Constants.serie_titulo, textSerTitulo.getText());
                datos.put(Constants.serie_episodios, textSerEpisodios.getText());
                datos.put(Constants.serie_temporadas, textSerTemporadas.getText());
                if(Backend.actualizar("serie", datos)){
                    borrarFormularioDirector();
                    JOptionPane.showMessageDialog(null, "Datos guardados correctamente");
                }else{
                    JOptionPane.showMessageDialog(null, "No se pudieron guardar los datos");    
                }
            }else{
                JOptionPane.showMessageDialog(null, "Error. Hay campos con valores no validos2");
            }
            
        }else{
            JOptionPane.showMessageDialog(null, "No se pudieron guardar los datos"); 
        }
        
    }//GEN-LAST:event_botonGuardarActionPerformed

    private void botonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarActionPerformed
        if(panelCliente.isVisible()){
            if(alias(textClienAlias.getText())){
                HashMap<String,String> datos = Backend.buscar("usuario", textClienAlias.getText());           
                textClienNombre.setText(datos.get(Constants.usuario_nombre));
                textClienEmail.setText(datos.get(Constants.usuario_email));
                textClienApell.setText(datos.get(Constants.usuario_apellido));
                textClienCel.setText(datos.get(Constants.usuario_celular));
                textClienContra.setText(datos.get(Constants.usuario_contrasegna));
                textClienFecha.setText(datos.get(Constants.usuario_fecha_nacimiento));    
            }else{
                JOptionPane.showMessageDialog(null, "Error. Los parametros no son correctos");
            }
        }else if(panelDirector.isVisible()){
            if(nombresYApellidos(textDirNombre.getText())){
                HashMap<String,String> datos = Backend.buscar("director", textDirNombre.getText());
                /*textDirNombre.setText(Constants.director_nombre);
                textDirApel.setText(Constants.director_apellido);
                textDirNacio.setText(Constants.director_nacionalidad);    */
                textDirNombre.setText(datos.get(Constants.director_nombre));
                textDirApel.setText(datos.get(Constants.director_apellido));
                textDirNacio.setText(datos.get(Constants.director_nacionalidad));
            }else{
                JOptionPane.showMessageDialog(null, "Error. Los parametros no son correctos");
            }
        }else if(panelPelicula.isVisible()){/////////////////////////****************************************************
            if(titulo(textPelTitulo.getText())){
                HashMap<String,String> datos = Backend.buscar("pelicula", textPelTitulo.getText());
                textPelResumen.setText(datos.get(Constants.pelicula_resumen));
                textPelAgno.setText(datos.get(Constants.pelicula_agno));
                comboBoxPelDir.setSelectedItem(datos.get(Constants.pelicula_director));
                JOptionPane.showMessageDialog(null, "Conulta realizada, sino trae datos es porque no existe el usuario");    
            }else{
                JOptionPane.showMessageDialog(null, "Error. Los parametros no son correctos");
            }
        }else if(panelSerie.isVisible()){/////////////////////////****************************************************
            if(titulo(textSerTitulo.getText())){
                HashMap<String,String> datos = Backend.buscar("serie", textSerTitulo.getText());
                /*textDirNombre.setText(datos.get(Constants.serie_episodios));
                textDirApel.setText(datos.get(Constants.serie_temporadas));*/
                textSerEpisodios.setText(datos.get(Constants.serie_episodios));
                textSerTemporadas.setText(datos.get(Constants.serie_temporadas));
                JOptionPane.showMessageDialog(null, "Conulta realizada, sino trae datos es porque no existe el usuario");    
            }else{
                JOptionPane.showMessageDialog(null, "Error. Los parametros no son correctos");
            }
        }
    }//GEN-LAST:event_botonBuscarActionPerformed

    private void botonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarActionPerformed
        if(panelCliente.isVisible()){
            if(alias(textClienAlias.getText())){
                if(Backend.eliminar("usuario", textClienAlias.getText())){
                	borrarFormularioCliente();
                    JOptionPane.showMessageDialog(null, "Se borró exitosamente");
                }else{
                    JOptionPane.showMessageDialog(null, "No se encontró el usuario");
                }
                    
            }else{
                JOptionPane.showMessageDialog(null, "Error. Los parametros no son correctos");
            }
        }else if(panelDirector.isVisible()){
            if(alias(textDirNombre.getText())){
                if(Backend.eliminar("usuario", textClienAlias.getText())){
                	borrarFormularioDirector();
                    JOptionPane.showMessageDialog(null, "Se borró exitosamente");
                }else{
                    JOptionPane.showMessageDialog(null, "No se encontró el director");
                }
                    
            }else{
                JOptionPane.showMessageDialog(null, "Error. Los parametros no son correctos");
            }
        }else if(panelPelicula.isVisible()){//**********************************************************************
            if(titulo(textPelTitulo.getText())){
                if(Backend.eliminar("pelicula", textPelTitulo.getText())){
                	borrarFormularioPelicula();
                    JOptionPane.showMessageDialog(null, "Se borró exitosamente");
                }else{
                    JOptionPane.showMessageDialog(null, "Error. Los parametros no son correctos");
                }
                    
            }else{
                JOptionPane.showMessageDialog(null, "Error. Los parametros no son correctos");
            }
        }else if(panelSerie.isVisible()){//**********************************************************************
            if(titulo(textSerTitulo.getText())){
                if(Backend.eliminar("serie", textSerTitulo.getText())){
                	borrarFormularioSerie();
                    JOptionPane.showMessageDialog(null, "Se borró exitosamente");
                }else{
                    JOptionPane.showMessageDialog(null, "No se encontró el director");
                }
                    
            }else{
                JOptionPane.showMessageDialog(null, "Error. Los parametros no son correctos");
            }
        }
    }//GEN-LAST:event_botonEliminarActionPerformed

    private void textClienAliasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textClienAliasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textClienAliasActionPerformed

    private void textClienEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textClienEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textClienEmailActionPerformed

    private void textClienApellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textClienApellActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textClienApellActionPerformed

    private void textClienContraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textClienContraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textClienContraActionPerformed

    private void textClienNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textClienNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textClienNombreActionPerformed

    private void textClienCelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textClienCelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textClienCelActionPerformed

    private void textClienFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textClienFechaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textClienFechaActionPerformed

    private void textDirNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textDirNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textDirNombreActionPerformed

    private void textDirApelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textDirApelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textDirApelActionPerformed

    private void textDirNacioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textDirNacioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textDirNacioActionPerformed

    private void textClienNombreFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textClienNombreFocusLost
        String cadena = textClienNombre.getText().trim();
        colorBorde(nombresYApellidos(cadena), textClienNombre);
    }//GEN-LAST:event_textClienNombreFocusLost

    private void textClienApellFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textClienApellFocusLost
        String cadena = textClienApell.getText().trim();
        colorBorde(nombresYApellidos(cadena), textClienApell);
    }//GEN-LAST:event_textClienApellFocusLost

    private void textClienCelFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textClienCelFocusLost
        String cadena = textClienCel.getText().trim();
        colorBorde(celular(cadena), textClienCel);
    }//GEN-LAST:event_textClienCelFocusLost

    private void textClienFechaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textClienFechaFocusLost
       String cadena = textClienFecha.getText().trim();
       colorBorde(fecha(cadena), textClienFecha);
    }//GEN-LAST:event_textClienFechaFocusLost

    private void textClienEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textClienEmailFocusLost
        String cadena = textClienEmail.getText().trim();
        colorBorde(correo(cadena), textClienEmail);
    }//GEN-LAST:event_textClienEmailFocusLost

    private void textClienAliasFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textClienAliasFocusLost
        String cadena = textClienAlias.getText().trim();
        colorBorde(alias(cadena), textClienAlias);
    }//GEN-LAST:event_textClienAliasFocusLost

    private void textClienContraFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textClienContraFocusLost
        String cadena = textClienContra.getText().trim();
        colorBorde(contrasena(cadena), textClienContra);
    }//GEN-LAST:event_textClienContraFocusLost

    private void textDirNombreFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textDirNombreFocusLost
        String cadena = textDirNombre.getText().trim();
        colorBorde(nombresYApellidos(cadena), textDirNombre);
    }//GEN-LAST:event_textDirNombreFocusLost

    private void textDirApelFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textDirApelFocusLost
        String cadena = textDirApel.getText().trim();
        colorBorde(nombresYApellidos(cadena), textDirApel);
    }//GEN-LAST:event_textDirApelFocusLost

    private void textDirNacioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textDirNacioFocusLost
        String cadena = textDirNacio.getText().trim();
        colorBorde(nacionalidad(cadena), textDirNacio);
    }//GEN-LAST:event_textDirNacioFocusLost

    private void comboBoxPelDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxPelDirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxPelDirActionPerformed

    private void textPelTituloFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textPelTituloFocusLost
        String cadena = textPelTitulo.getText().trim();
        colorBorde(titulo(cadena), textPelTitulo);
    }//GEN-LAST:event_textPelTituloFocusLost

    private void textPelTituloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textPelTituloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textPelTituloActionPerformed

    private void textPelAgnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textPelAgnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textPelAgnoActionPerformed

    private void textPelAgnoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textPelAgnoFocusLost
        String cadena = textPelAgno.getText().trim();
        colorBorde(agno(cadena), textPelAgno);
    }//GEN-LAST:event_textPelAgnoFocusLost

    private void textSerTituloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textSerTituloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textSerTituloActionPerformed

    private void textSerTituloFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textSerTituloFocusLost
        String cadena = textSerTitulo.getText().trim();
        colorBorde(titulo(cadena), textSerTitulo);
    }//GEN-LAST:event_textSerTituloFocusLost

    private void textSerEpisodiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textSerEpisodiosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textSerEpisodiosActionPerformed

    private void textSerEpisodiosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textSerEpisodiosFocusLost
        String cadena = textSerEpisodios.getText().trim();
        colorBorde(episodios(cadena), textSerEpisodios);
    }//GEN-LAST:event_textSerEpisodiosFocusLost

    private void textSerTemporadasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textSerTemporadasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textSerTemporadasActionPerformed

    private void textSerTemporadasFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textSerTemporadasFocusLost
        String cadena = textSerTemporadas.getText().trim();
        colorBorde(temporadas(cadena), textSerTemporadas);
    }//GEN-LAST:event_textSerTemporadasFocusLost

    private void textPelResumenFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textPelResumenFocusLost
        String cadena = textPelResumen.getText().trim();
        colorBordeT(resumen(cadena), textPelResumen);
    }//GEN-LAST:event_textPelResumenFocusLost


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Prototipo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Prototipo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Prototipo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Prototipo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Prototipo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel TituloUsuarioExistente;
    private javax.swing.JButton botonBuscar;
    private javax.swing.JButton botonCliente;
    private javax.swing.JButton botonDirector;
    private javax.swing.JButton botonEliminar;
    private javax.swing.JButton botonGuardar;
    private javax.swing.JButton botonPelicula;
    private javax.swing.JButton botonSerie;
    private javax.swing.JComboBox<String> comboBoxPelDir;
    private javax.swing.JLabel dir_apellido;
    private javax.swing.JLabel dir_nacionalidad;
    private javax.swing.JLabel dir_nombre;
    private javax.swing.JLabel etiClienteAlias;
    private javax.swing.JLabel etiClienteApell;
    private javax.swing.JLabel etiClienteCel;
    private javax.swing.JLabel etiClienteContra;
    private javax.swing.JLabel etiClienteEmail;
    private javax.swing.JLabel etiClienteFecha;
    private javax.swing.JLabel etiClienteNombre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelCliente;
    private javax.swing.JPanel panelConfirmacion;
    private javax.swing.JPanel panelDirector;
    private javax.swing.JPanel panelMenu;
    private javax.swing.JPanel panelPadre;
    private javax.swing.JPanel panelPelicula;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JPanel panelSerie;
    private javax.swing.JLabel pel_año;
    private javax.swing.JLabel pel_director;
    private javax.swing.JLabel pel_resumen;
    private javax.swing.JLabel pel_titulo;
    private javax.swing.JLabel ser_episodios;
    private javax.swing.JLabel ser_temporadas;
    private javax.swing.JLabel ser_titulo;
    private javax.swing.JTextField textClienAlias;
    private javax.swing.JTextField textClienApell;
    private javax.swing.JTextField textClienCel;
    private javax.swing.JTextField textClienContra;
    private javax.swing.JTextField textClienEmail;
    private javax.swing.JTextField textClienFecha;
    private javax.swing.JTextField textClienNombre;
    private javax.swing.JTextField textDirApel;
    private javax.swing.JTextField textDirNacio;
    private javax.swing.JTextField textDirNombre;
    private javax.swing.JTextField textPelAgno;
    private javax.swing.JTextArea textPelResumen;
    private javax.swing.JTextField textPelTitulo;
    private javax.swing.JTextField textSerEpisodios;
    private javax.swing.JTextField textSerTemporadas;
    private javax.swing.JTextField textSerTitulo;
    private javax.swing.JLabel tituloCliente;
    private javax.swing.JLabel tituloDirector;
    private javax.swing.JLabel tituloPelicula;
    private javax.swing.JLabel tituloSerie;
    // End of variables declaration//GEN-END:variables

    
    //Metodos Expresiones Regulares
    public boolean alias(String cadena){
        String expReg = "[a-zA-Z0-9_-]+";
        HashMap<String,String> datos = Backend.buscar("usuario", cadena);
        if(datos.get(Constants.usuario_alias).equals(cadena)){
            TituloUsuarioExistente.setVisible(true);
        }else{
            TituloUsuarioExistente.setVisible(false);
        }
        return Pattern.matches(expReg, cadena);        
    }
    
    public boolean nombresYApellidos(String cadena){
        String expReg = "[a-zA-Z]+|[a-zA-Z]+\\s{0,1}[a-zA-Z]+";
        return Pattern.matches(expReg, cadena);        
    }
    
    public boolean celular(String cadena){
        String expReg = "\\d{10}";
        return Pattern.matches(expReg, cadena);       
    }
    
    public boolean correo(String cadena){
        String expReg = "^[\\w-]+(\\.[\\w-]+)*@[A-Za-z0-9]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$";
        return Pattern.matches(expReg, cadena);      
    }
    
    public boolean contrasena(String cadena){
        String expReg = "^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=])(?=\\S+$).{8,20}$";
        return Pattern.matches(expReg, cadena);        
    }
    
    public boolean fecha(String cadena){
        String expReg = "\\d{4}-\\d{2}-\\d{2}";
        return Pattern.matches(expReg, cadena);       
    }
    
    public boolean nacionalidad(String cadena){
        String expReg = "[a-zA-Z]+";
        return Pattern.matches(expReg, cadena);        
    }
    
    public boolean titulo(String cadena){ /////////////////////////////////////********************
        String expReg = "^[0-9a-zA-ZÀ-ÿ\\u00f1\\u00d1.,;'$!¡()-_?¿]+(\\s*[0-9a-zA-ZÀ-ÿ\\u00f1\\u00d1.,;'$!¡()-_?¿]*)*[0-9a-zA-ZÀ-ÿ\\u00f1\\u00d1.,;'$!¡()-_?¿]+{1,50}$";
        return Pattern.matches(expReg, cadena);       
    }
    
    public boolean resumen(String cadena){ /////////////////////////////////////********************
        String expReg = "^[0-9a-zA-ZÀ-ÿ\\u00f1\\u00d1.,;'$!¡()-_?¿]+(\\s*[0-9a-zA-ZÀ-ÿ\\u00f1\\u00d1.,;'$!¡()-_?¿]*)*[0-9a-zA-ZÀ-ÿ\\u00f1\\u00d1.,;'$!¡()-_?¿]+{1,250}$";
        return Pattern.matches(expReg, cadena);       
    }
    
    public boolean agno(String cadena){ /////////////////////////////////////********************
        String expReg = "\\d{4}";
        return Pattern.matches(expReg, cadena);       
    }
    
    public boolean episodios(String cadena){ /////////////////////////////////////********************
        String expReg = "[0-9]{1,3}";
        return Pattern.matches(expReg, cadena);       
    }
    
    public boolean temporadas(String cadena){ /////////////////////////////////////********************
        String expReg = "[0-9]{1,3}";
        return Pattern.matches(expReg, cadena);       
    }
    
    
    public void colorBorde(boolean correcto, JTextField casilla){
        if(correcto){
            casilla.setBorder(BorderFactory.createLineBorder(Color.GREEN));
        }else{
            casilla.setBorder(BorderFactory.createLineBorder(Color.RED));
        }
        casilla.setText(casilla.getText().trim());
    }
    
    public void colorBordeT(boolean correcto, JTextArea casilla){///***********************
        if(correcto){
            casilla.setBorder(BorderFactory.createLineBorder(Color.GREEN));
        }else{
            casilla.setBorder(BorderFactory.createLineBorder(Color.RED));
        }
        casilla.setText(casilla.getText().trim());
    }
    
    public boolean validarFormularioCliente(){
        boolean alias = alias(textClienAlias.getText().trim());
        boolean email = correo(textClienEmail.getText().trim());
        boolean nombre = nombresYApellidos(textClienNombre.getText().trim());
        boolean apellidos = nombresYApellidos(textClienApell.getText().trim());
        boolean celular = celular(textClienCel.getText().trim());
        boolean contrasena = contrasena(textClienContra.getText().trim());
        boolean fechaNacimiento = fecha(textClienFecha.getText().trim());
        
        
        return alias && email && nombre && apellidos && celular && contrasena && fechaNacimiento;
    }
    
    public boolean validarFormularioDirector(){
        boolean nombre = nombresYApellidos(textDirNombre.getText().trim());
        boolean apellido = nombresYApellidos(textDirApel.getText().trim());
        boolean fecha = nombresYApellidos(textDirNacio.getText().trim());
        
        return nombre && apellido && fecha;
    }
    
    public boolean validarFormularioPelicula(){///////////////**********************************
        boolean titulo = titulo(textPelTitulo.getText().trim());
        //boolean resumen = episodios(textPelResumen.getText().trim());
        boolean resumen = resumen(textPelResumen.getText().trim());
        //boolean agno = temporadas(textPelAgno.getText().trim());
        boolean agno = agno(textPelAgno.getText().trim());
        return titulo && resumen && agno;
    }
    
    public boolean validarFormularioSerie(){///////////////**********************************
        boolean titulo = titulo(textSerTitulo.getText().trim());
        boolean episodios = episodios(textSerEpisodios.getText().trim());
        boolean temporadas = temporadas(textSerTemporadas.getText().trim());
        
        return titulo && episodios && temporadas;
    }
    
    public void borrarFormularioCliente(){
        textClienAlias.setText("");
        textClienEmail.setText("");
        textClienNombre.setText("");
        textClienApell.setText("");
        textClienCel.setText("");
        textClienContra.setText("");
        textClienFecha.setText("");
        textClienAlias.setBorder(BorderFactory.createLineBorder(Color.RED));
        textClienEmail.setBorder(BorderFactory.createLineBorder(Color.RED));
        textClienNombre.setBorder(BorderFactory.createLineBorder(Color.RED));
        textClienApell.setBorder(BorderFactory.createLineBorder(Color.RED));
        textClienCel.setBorder(BorderFactory.createLineBorder(Color.RED));
        textClienContra.setBorder(BorderFactory.createLineBorder(Color.RED));
        textClienFecha.setBorder(BorderFactory.createLineBorder(Color.RED));
    }
    
    public void borrarFormularioDirector(){
        textDirNombre.setText("");
        textDirApel.setText("");
        textDirNacio.setText("");
        textDirNombre.setBorder(BorderFactory.createLineBorder(Color.RED));
        textDirApel.setBorder(BorderFactory.createLineBorder(Color.RED));
        textDirNacio.setBorder(BorderFactory.createLineBorder(Color.RED));   
    }
    
    public void borrarFormularioPelicula(){/////************************************************
        textPelTitulo.setText("");
        textPelResumen.setText("");
        textPelAgno.setText("");
        textPelTitulo.setBorder(BorderFactory.createLineBorder(Color.RED));
        textPelResumen.setBorder(BorderFactory.createLineBorder(Color.RED));
        textPelAgno.setBorder(BorderFactory.createLineBorder(Color.RED));
        comboBoxPelDir.setBorder(BorderFactory.createLineBorder(Color.RED));
    }
    
    public void borrarFormularioSerie(){/////************************************************
        textSerTitulo.setText("");
        textSerEpisodios.setText("");
        textSerTemporadas.setText("");
        textSerTitulo.setBorder(BorderFactory.createLineBorder(Color.RED));
        textSerEpisodios.setBorder(BorderFactory.createLineBorder(Color.RED));
        textSerTemporadas.setBorder(BorderFactory.createLineBorder(Color.RED));   
    }

    private void inicializarComboDirectores(){
        HashMap<String, Integer> datos;
        datos = Backend.buscarDirectores();
        for(Map.Entry entry: datos.entrySet()){
            Object Items = entry.getKey();
            comboBoxPelDir.addItem((String) Items);
        }
        comboBoxPelDir.setSelectedItem(null);
    }
}
